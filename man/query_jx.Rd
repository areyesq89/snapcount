% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snaptron.R
\name{query_jx}
\alias{query_jx}
\alias{query_gene}
\alias{query_exon}
\title{Query Junctions/Genes/Exons}
\usage{
query_jx(compilation, genes_or_intervals, range_filters = NULL,
  sample_filters = NULL, sids = NULL)

query_gene(compilation, genes_or_intervals, range_filters = NULL,
  sample_filters = NULL, sids = NULL)

query_exon(compilation, genes_or_intervals, range_filters = NULL,
  sample_filters = NULL, sids = NULL)
}
\arguments{
\item{compilation}{A single string containing the name of the Snaptron datasource}

\item{genes_or_intervals}{Either a list of >=1 \code{HUGO} gene names \code{(e.g. "BRCA1")} or a
GRanges-class object containing one or more genomic intervals \code{(e.g. "chr1:1-1000")}.
Strand information is ignored.}

\item{range_filters}{A list of strings defining range-related contraints}

\item{sample_filters}{A list of strings defining sample-related contraints}

\item{sids}{A list of rail_ids (integer sample IDs) to filter results on. Only
records which have been found in at least one of these samples will be returned.}
}
\description{
Given one or more gene names or genomic range
intervals it will return a list of 0 or more genes, junctions, or exons
(depending on which query form is used) which overlap the ranges.
}
